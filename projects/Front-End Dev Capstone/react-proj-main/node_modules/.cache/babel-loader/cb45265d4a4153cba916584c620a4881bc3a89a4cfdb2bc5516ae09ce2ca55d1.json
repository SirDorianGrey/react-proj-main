{"ast":null,"code":"const availableTimesByDate = {\n  '2023-11-26': ['14:00', '15:00', '16:00'],\n  '2023-11-27': ['10:00', '11:00', '12:00'],\n  '2023-11-28': ['09:00', '10:00', '11:00'],\n  '2023-11-29': ['13:00', '14:00', '15:00'],\n  '2023-11-30': ['16:00', '17:00', '18:00'],\n  '2023-12-01': ['10:00', '11:00', '12:00'],\n  '2023-12-02': ['14:00', '15:00', '16:00'],\n  '2023-12-03': ['09:00', '10:00', '11:00'],\n  '2023-12-04': ['13:00', '14:00', '15:00'],\n  '2023-12-05': ['16:00', '17:00', '18:00'],\n  '2023-12-06': ['10:00', '11:00', '12:00'],\n  '2023-12-07': ['14:00', '15:00', '16:00'],\n  '2023-12-08': ['09:00', '10:00', '11:00'],\n  '2023-12-09': ['13:00', '14:00', '15:00'],\n  '2023-12-10': ['16:00', '17:00', '18:00'],\n  '2023-12-11': ['10:00', '11:00', '12:00'],\n  '2023-12-12': ['14:00', '15:00', '16:00'],\n  '2023-12-13': ['09:00', '10:00', '11:00'],\n  '2023-12-14': ['13:00', '14:00', '15:00'],\n  '2023-12-15': ['16:00', '17:00', '18:00'],\n  '2023-12-16': ['10:00', '11:00', '12:00'],\n  '2023-12-17': ['14:00', '15:00', '16:00'],\n  '2023-12-18': ['09:00', '10:00', '11:00'],\n  '2023-12-19': ['13:00', '14:00', '15:00'],\n  '2023-12-20': ['16:00', '17:00', '18:00'],\n  '2023-12-21': ['10:00', '11:00', '12:00'],\n  '2023-12-22': ['14:00', '15:00', '16:00'],\n  '2023-12-23': ['09:00', '10:00', '11:00'],\n  '2023-12-24': ['13:00', '14:00', '15:00'],\n  '2023-12-25': ['16:00', '17:00', '18:00'],\n  '2023-12-26': ['10:00', '11:00', '12:00'],\n  '2023-12-27': ['14:00', '15:00', '16:00'],\n  '2023-12-28': ['09:00', '10:00', '11:00'],\n  '2023-12-29': ['13:00', '14:00', '15:00'],\n  '2023-12-30': ['16:00', '17:00', '18:00'],\n  '2023-12-31': ['10:00', '11:00', '12:00'],\n  '2024-01-01': ['14:00', '15:00', '16:00'],\n  '2024-01-02': ['09:00', '10:00', '11:00'],\n  '2024-01-03': ['13:00', '14:00', '15:00'],\n  '2024-01-03': ['13:00', '14:00', '15:00'],\n  '2024-01-04': ['16:00', '17:00', '18:00'],\n  '2024-01-05': ['10:00', '11:00', '12:00'],\n  '2024-01-06': ['14:00', '15:00', '16:00'],\n  '2024-01-07': ['09:00', '10:00', '11:00'],\n  '2024-01-08': ['13:00', '14:00', '15:00'],\n  '2024-01-09': ['16:00', '17:00', '18:00'],\n  '2024-01-10': ['10:00', '11:00', '12:00'],\n  '2024-01-11': ['14:00', '15:00', '16:00'],\n  '2024-01-12': ['09:00', '10:00', '11:00'],\n  '2024-01-13': ['13:00', '14:00', '15:00'],\n  '2024-01-14': ['16:00', '17:00', '18:00'],\n  '2024-01-15': ['10:00', '11:00', '12:00'],\n  '2024-01-16': ['14:00', '15:00', '16:00'],\n  '2024-01-17': ['09:00', '10:00', '11:00'],\n  '2024-01-18': ['13:00', '14:00', '15:00'],\n  '2024-01-19': ['16:00', '17:00', '18:00'],\n  '2024-01-20': ['10:00', '11:00', '12:00'],\n  '2024-01-21': ['14:00', '15:00', '16:00'],\n  '2024-01-22': ['09:00', '10:00', '11:00'],\n  '2024-01-23': ['13:00', '14:00', '15:00'],\n  '2024-01-24': ['16:00', '17:00', '18:00'],\n  '2024-01-25': ['10:00', '11:00', '12:00'],\n  '2024-01-26': ['14:00', '15:00', '16:00'],\n  '2024-01-27': ['09:00', '10:00', '11:00'],\n  '2024-01-28': ['13:00', '14:00', '15:00'],\n  '2024-01-29': ['16:00', '17:00', '18:00'],\n  '2024-01-30': ['10:00', '11:00', '12:00'],\n  '2024-01-31': ['10:00', '11:00', '12:00']\n};\nconst fetchAPI = date => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      if (availableTimesByDate[date]) {\n        resolve(availableTimesByDate[date]);\n      } else {\n        resolve([]); // Return an empty array when there are no available times\n      }\n    }, 1000);\n  });\n};\nconst submitAPI = formData => {\n  availableTimesByDate[formData.date] = availableTimesByDate[formData.date].filter(time => time !== formData.time);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (formData) {\n        resolve(true); // Simulate successful submission\n      } else {\n        reject(new Error('Form submission failed.'));\n      }\n    }, 1000); // Simulate API delay\n  });\n};\n\nexport { fetchAPI, submitAPI };","map":{"version":3,"names":["availableTimesByDate","fetchAPI","date","Promise","resolve","setTimeout","submitAPI","formData","filter","time","reject","Error"],"sources":["/Users/doriangrey/Desktop/projects/Front-End Dev Capstone/react-proj-main/src/mockAPI.js"],"sourcesContent":["const availableTimesByDate = {\r\n  '2023-11-26': ['14:00', '15:00', '16:00'],\r\n  '2023-11-27': ['10:00', '11:00', '12:00'],\r\n  '2023-11-28': ['09:00', '10:00', '11:00'],\r\n  '2023-11-29': ['13:00', '14:00', '15:00'],\r\n  '2023-11-30': ['16:00', '17:00', '18:00'],\r\n  '2023-12-01': ['10:00', '11:00', '12:00'],\r\n  '2023-12-02': ['14:00', '15:00', '16:00'],\r\n  '2023-12-03': ['09:00', '10:00', '11:00'],\r\n  '2023-12-04': ['13:00', '14:00', '15:00'],\r\n  '2023-12-05': ['16:00', '17:00', '18:00'],\r\n  '2023-12-06': ['10:00', '11:00', '12:00'],\r\n  '2023-12-07': ['14:00', '15:00', '16:00'],\r\n  '2023-12-08': ['09:00', '10:00', '11:00'],\r\n  '2023-12-09': ['13:00', '14:00', '15:00'],\r\n  '2023-12-10': ['16:00', '17:00', '18:00'],\r\n  '2023-12-11': ['10:00', '11:00', '12:00'],\r\n  '2023-12-12': ['14:00', '15:00', '16:00'],\r\n  '2023-12-13': ['09:00', '10:00', '11:00'],\r\n  '2023-12-14': ['13:00', '14:00', '15:00'],\r\n  '2023-12-15': ['16:00', '17:00', '18:00'],\r\n  '2023-12-16': ['10:00', '11:00', '12:00'],\r\n  '2023-12-17': ['14:00', '15:00', '16:00'],\r\n  '2023-12-18': ['09:00', '10:00', '11:00'],\r\n  '2023-12-19': ['13:00', '14:00', '15:00'],\r\n  '2023-12-20': ['16:00', '17:00', '18:00'],\r\n  '2023-12-21': ['10:00', '11:00', '12:00'],\r\n  '2023-12-22': ['14:00', '15:00', '16:00'],\r\n  '2023-12-23': ['09:00', '10:00', '11:00'],\r\n  '2023-12-24': ['13:00', '14:00', '15:00'],\r\n  '2023-12-25': ['16:00', '17:00', '18:00'],\r\n  '2023-12-26': ['10:00', '11:00', '12:00'],\r\n  '2023-12-27': ['14:00', '15:00', '16:00'],\r\n  '2023-12-28': ['09:00', '10:00', '11:00'],\r\n  '2023-12-29': ['13:00', '14:00', '15:00'],\r\n  '2023-12-30': ['16:00', '17:00', '18:00'],\r\n  '2023-12-31': ['10:00', '11:00', '12:00'],\r\n  '2024-01-01': ['14:00', '15:00', '16:00'],\r\n  '2024-01-02': ['09:00', '10:00', '11:00'],\r\n  '2024-01-03': ['13:00', '14:00', '15:00'],\r\n  '2024-01-03': ['13:00', '14:00', '15:00'],\r\n  '2024-01-04': ['16:00', '17:00', '18:00'],\r\n  '2024-01-05': ['10:00', '11:00', '12:00'],\r\n  '2024-01-06': ['14:00', '15:00', '16:00'],\r\n  '2024-01-07': ['09:00', '10:00', '11:00'],\r\n  '2024-01-08': ['13:00', '14:00', '15:00'],\r\n  '2024-01-09': ['16:00', '17:00', '18:00'],\r\n  '2024-01-10': ['10:00', '11:00', '12:00'],\r\n  '2024-01-11': ['14:00', '15:00', '16:00'],\r\n  '2024-01-12': ['09:00', '10:00', '11:00'],\r\n  '2024-01-13': ['13:00', '14:00', '15:00'],\r\n  '2024-01-14': ['16:00', '17:00', '18:00'],\r\n  '2024-01-15': ['10:00', '11:00', '12:00'],\r\n  '2024-01-16': ['14:00', '15:00', '16:00'],\r\n  '2024-01-17': ['09:00', '10:00', '11:00'],\r\n  '2024-01-18': ['13:00', '14:00', '15:00'],\r\n  '2024-01-19': ['16:00', '17:00', '18:00'],\r\n  '2024-01-20': ['10:00', '11:00', '12:00'],\r\n  '2024-01-21': ['14:00', '15:00', '16:00'],\r\n  '2024-01-22': ['09:00', '10:00', '11:00'],\r\n  '2024-01-23': ['13:00', '14:00', '15:00'],\r\n  '2024-01-24': ['16:00', '17:00', '18:00'],\r\n  '2024-01-25': ['10:00', '11:00', '12:00'],\r\n  '2024-01-26': ['14:00', '15:00', '16:00'],\r\n  '2024-01-27': ['09:00', '10:00', '11:00'],\r\n  '2024-01-28': ['13:00', '14:00', '15:00'],\r\n  '2024-01-29': ['16:00', '17:00', '18:00'],\r\n  '2024-01-30': ['10:00', '11:00', '12:00'],\r\n  '2024-01-31': ['10:00', '11:00', '12:00'],\r\n};\r\n\r\n\r\n  const fetchAPI = (date) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        if (availableTimesByDate[date]) {\r\n          resolve(availableTimesByDate[date]);\r\n        } else {\r\n          resolve([]); // Return an empty array when there are no available times\r\n        }\r\n      }, 1000);\r\n    });\r\n  };\r\n\r\n  const submitAPI = (formData) => {\r\n    \r\n    availableTimesByDate[formData.date] = availableTimesByDate[formData.date].filter(time => time !== formData.time);\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (formData) {\r\n          resolve(true); // Simulate successful submission\r\n        } else {\r\n          reject(new Error('Form submission failed.'));\r\n        }\r\n      }, 1000); // Simulate API delay\r\n    });\r\n  };\r\n\r\n  export{fetchAPI,submitAPI}"],"mappings":"AAAA,MAAMA,oBAAoB,GAAG;EAC3B,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;EACzC,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO;AAC1C,CAAC;AAGC,MAAMC,QAAQ,GAAIC,IAAI,IAAK;EACzB,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;IAC9BC,UAAU,CAAC,MAAM;MACf,IAAIL,oBAAoB,CAACE,IAAI,CAAC,EAAE;QAC9BE,OAAO,CAACJ,oBAAoB,CAACE,IAAI,CAAC,CAAC;MACrC,CAAC,MAAM;QACLE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;MACf;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,CAAC;AACJ,CAAC;AAED,MAAME,SAAS,GAAIC,QAAQ,IAAK;EAE9BP,oBAAoB,CAACO,QAAQ,CAACL,IAAI,CAAC,GAAGF,oBAAoB,CAACO,QAAQ,CAACL,IAAI,CAAC,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAKF,QAAQ,CAACE,IAAI,CAAC;EAEhH,OAAO,IAAIN,OAAO,CAAC,CAACC,OAAO,EAAEM,MAAM,KAAK;IACtCL,UAAU,CAAC,MAAM;MACf,IAAIE,QAAQ,EAAE;QACZH,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;MACjB,CAAC,MAAM;QACLM,MAAM,CAAC,IAAIC,KAAK,CAAC,yBAAyB,CAAC,CAAC;MAC9C;IACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC;AACJ,CAAC;;AAED,SAAOV,QAAQ,EAACK,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}