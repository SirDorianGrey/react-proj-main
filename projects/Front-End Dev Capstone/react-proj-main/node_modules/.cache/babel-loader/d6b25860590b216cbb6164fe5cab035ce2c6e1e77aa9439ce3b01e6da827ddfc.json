{"ast":null,"code":"var _jsxFileName = \"/Users/doriangrey/Desktop/projects/Front-End Dev Capstone/react-proj-main/src/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Homepage from './Homepage';\nimport Header from './Header';\nimport AboutPage from './AboutPage';\nimport BookingPage from './BookingPage';\nimport { fetchAPI, submitAPI } from './mockAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  async function initializeTimes() {\n    const today = new Date().toISOString().split('T')[0]; // Convert the date to the required format\n\n    // Fetch the available times for today's date\n    let times;\n    try {\n      times = await fetchAPI(today);\n      console.log('fetchAPI returned:', times); // Log the value returned by fetchAPI\n    } catch (error) {\n      // If fetchAPI throws an error (i.e., there are no available times), initialize times as an empty array\n      times = [];\n    }\n    const options = times.map(time => ({\n      value: time,\n      label: time\n    }));\n    console.log('Options for Select component:', options); // Log the options for the Select component\n\n    return options;\n  }\n  const updateTimes = async (state, action) => {\n    const times = await fetchAPI(action);\n    return times.map(time => ({\n      value: time,\n      label: time\n    }));\n  };\n  const [availableTimes, dispatch] = useReducer(updateTimes, []);\n  useEffect(() => {\n    initializeTimes().then(times => dispatch(times));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/about\",\n      element: /*#__PURE__*/_jsxDEV(AboutPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/reservations\",\n      element: /*#__PURE__*/_jsxDEV(BookingPage, {\n        availableTimes: availableTimes,\n        dispatch: dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"WpNnl41SeeEyhEc1kEk1pvug0XU=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useReducer","useEffect","Routes","Route","Homepage","Header","AboutPage","BookingPage","fetchAPI","submitAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_s","initializeTimes","today","Date","toISOString","split","times","console","log","error","options","map","time","value","label","updateTimes","state","action","availableTimes","dispatch","then","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/doriangrey/Desktop/projects/Front-End Dev Capstone/react-proj-main/src/Main.js"],"sourcesContent":["import React, { useReducer, useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport Homepage from './Homepage';\nimport Header from './Header'; \nimport AboutPage from './AboutPage';\nimport BookingPage from './BookingPage';\nimport { fetchAPI, submitAPI } from './mockAPI';\n\nfunction Main() {\n\n  async function initializeTimes() {\n    const today = new Date().toISOString().split('T')[0]; // Convert the date to the required format\n    \n    // Fetch the available times for today's date\n    let times;\n    try {\n      times = await fetchAPI(today);\n      console.log('fetchAPI returned:', times); // Log the value returned by fetchAPI\n    } catch (error) {\n      // If fetchAPI throws an error (i.e., there are no available times), initialize times as an empty array\n      times = [];\n    }\n    \n    const options = times.map(time => ({ value: time, label: time }));\n    console.log('Options for Select component:', options); // Log the options for the Select component\n    \n    return options;\n  }\n  \n  const updateTimes = async (state, action) => {\n    const times = await fetchAPI(action);\n    return times.map(time => ({ value: time, label: time }));\n  };\n\n\n  const [availableTimes, dispatch] = useReducer(updateTimes, []);\n\n  useEffect(() => {\n    initializeTimes().then(times => dispatch(times));\n  }, []);\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<><Header /><Homepage /></>} />\n      <Route path=\"/about\" element={<AboutPage />} />\n      <Route path=\"/reservations\" element={<BookingPage availableTimes={availableTimes} dispatch={dispatch}  />} />\n    </Routes>\n  );\n}\n\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}